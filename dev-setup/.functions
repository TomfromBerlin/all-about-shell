#!/local/bin/zsh

# mkdir + cd
function mkd() {
  if [ $# -eq 1 ]; then
    mkdir -p "$1" && cd "$1";
  else
    echo "Error - no directory passed!";
  fi
}

# Calculate percentage
function percent() {
  if [ $# -ne 2 ]; then
    echo "Error - 2 arguments are mandatory!"
  fi

  echo "scale=2; $2*$1/100" | bc
}

# Add ssh keys on login
function sshadd() {
  ssh-add -l >/dev/null

  if [[ $? != 0  ]]; then
    ssh-add ~/.ssh/<key-1> ~/.ssh/<key-2> ~/.ssh/<key-3> 2>/dev/null
  fi
}

# Find top n biggest files (default is 5)
function big() {
  num=5;
  if [ $# -gt 0 ]; then
    num=$1
  fi;
  find . -type f -exec ls -s {} \; | sort -n -r | head -$num | awk '{printf("%.2fM %s\n", $1*512/1024/1024, $2)}'
}

# Timer
function timer() {
  count=10;
  if [ $# -gt 0 ]; then
    count=$1
  fi
  echo "Timer of $count seconds started";
  for ((i=count; i>0; i--)); do sleep 1; printf "Time remaining : $i seconds \r"; done
  echo "\nTime Up!"
  echo -e "\a"
}

# Most used commands
function topcmd() {
history | awk '{$1=""; CMD[$0]++;count++}END {for (a in CMD) print CMD[a]" " CMD[a]/count*100"% " a;}' | grep -v "./" | sort -nr -S1% | nl | head -n20 -z | column -t -N Rank,Count,Percent,Command,Arguments -R Rank,Count,Percent
}

# Go up by n directories
function up() {
  level=$1
  if [ $# -gt 0 ]; then
    while [ "$level" -gt "0" ]; do
      cd ..
      level=$(($level - 1))
    done
  else
    cd ..
  fi
}

# cheat.sh shortcut
function cheatsheet() { curl http://cht.sh/$1 }

# docker-compose up
function dcu() {
  if [ $# -gt 0 ]; then
    docker-compose -f $1 up -d
  else
    docker-compose up -d
  fi
}

# docker-compose down
function dcd() {
  if [ $# -gt 0 ]; then
    docker-compose -f $1 down
  else
    docker-compose down
  fi
}

# calculate monthly in-hand salary
function inhand() {
  if [ $1 -gt 0 ]; then
    echo $((($1 * 0.75) / 12))
  fi
}
